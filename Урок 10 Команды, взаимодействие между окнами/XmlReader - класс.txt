XmlReader - класс

Предоставляет средство чтения, обеспечивающее быстрый прямой доступ (без кэширования) к данным XML.

Пространство имен:  System.Xml

Конструкторы

 XmlReader	Инициализирует новый экземпляр класса XmlReader.

Свойства

 AttributeCount	При переопределении в производном классе получает количество атрибутов текущего узла.
 BaseURI	При переопределении в производном классе получает базовый URI текущего узла.
 CanReadBinaryContent	Получает значение, указывающее, реализует ли объект XmlReader методы чтения двоичного содержимого.
 CanReadValueChunk	Возвращает значение, указывающее, реализует ли объект XmlReader метод ReadValueChunk.
 CanResolveEntity	Возвращает значение, определяющее возможность анализа и разрешения объектов с помощью данного средства чтения.
 Depth	При переопределении в производном классе получает глубину текущего узла в XML-документе.
 EOF	При переопределении в производном классе получает значение, показывающее, установлено ли средство чтения в конец потока.
 HasAttributes	Получает значение, указывающее, имеются ли у текущего узла какие-либо атрибуты.
 HasValue	При переопределении в производном классе получает значение, показывающее, имеет ли текущий узел свойство Value.
 IsDefault	При переопределении в производном классе получает значение, определяющее, является текущий узел атрибутом, созданным из значения по умолчанию, определенного в DTD или схеме.
 IsEmptyElement	При переопределении в производном классе получает значение, определяющее, является ли текущий узел пустым элементом (например, <MyElement/>).
 Item[Int32]	При переопределении в производном классе получает значение атрибута по указанному индексу.
 Item[String]	При переопределении в производном классе получает значение атрибута с указанным свойством Name.
 Item[String, String]	При переопределении в производном классе получает значение атрибута с указанными свойствами LocalName и NamespaceURI.
 LocalName	При переопределении в производном классе получает локальное имя текущего узла.
 Name	При переопределении в производном классе получает полное имя текущего узла.
 NamespaceURI	При переопределении в производном классе получает URI пространства имен (определенное в спецификации W3C Namespace) узла, на котором расположено средство чтения.
 NameTable	При переопределении в производном классе получает класс XmlNameTable, связанный с данной реализацией.
 NodeType	При переопределении в производном классе получает тип текущего узла.
 Prefix	При переопределении в производном классе получает префикс пространства имен, связанный с текущим узлом.
 QuoteChar	При переопределении в производном классе получает знак кавычек для выделения значения узла атрибута.
 ReadState	При переопределении в производном классе получает состояние средства чтения.
 SchemaInfo	Получает сведения схемы, которые были назначены текущему узлу в результате проверки схемы.
 Settings	Получает объект XmlReaderSettings, используемый для создания этого экземпляра XmlReader.
 Value	При переопределении в производном классе получает текстовое значение текущего узла.
 ValueType	Возвращает тип CLR текущего узла.
 XmlLang	При переопределении в производном классе получает текущую область действия xml:lang.
 XmlSpace	При переопределении в производном классе получает текущую область xml:space.

Методы

 Close	При переопределении в производном классе изменяет значение свойства ReadState на Closed.
 Create(Stream)	Создает новый экземпляр XmlReader с использованием указанного потока.
 Create(String)	Создает новый экземпляр XmlReader с указанным URI.
 Create(TextReader)	Создает новый экземпляр XmlReader с указанным TextReader.
 Create(Stream, XmlReaderSettings)	Создает новый экземпляр XmlReader с указанным потоком и объектом XmlReaderSettings.
 Create(String, XmlReaderSettings)	Создает новый экземпляр с указанным URI и XmlReaderSettings.
 Create(TextReader, XmlReaderSettings)	Создает новый экземпляр XmlReader с использованием указанных объектов TextReader и XmlReaderSettings.
 Create(XmlReader, XmlReaderSettings)	Создает новый экземпляр XmlReader с указанными объектами XmlReader и XmlReaderSettings.
 Create(Stream, XmlReaderSettings, String)	Создает новый экземпляр XmlReader с использованием указанного потока, базового URI и объекта XmlReaderSettings.
 Create(Stream, XmlReaderSettings, XmlParserContext)	Создает новый экземпляр XmlReader с использованием указанного потока, XmlReaderSettings и объектов XmlParserContext.
 Create(String, XmlReaderSettings, XmlParserContext)	Создает новый экземпляр XmlReader с помощью указанного URI, XmlReaderSettings и объектов XmlParserContext.
 Create(TextReader, XmlReaderSettings, String)	Создается новый экземпляр XmlReader с помощью указанного TextReader, XmlReaderSettings и базового URI.
 Create(TextReader, XmlReaderSettings, XmlParserContext)	Создает новый экземпляр XmlReader с использованием указанных объектов TextReader, XmlReaderSettings и XmlParserContext.
 Dispose()	Освобождает все ресурсы, используемые текущим экземпляром класса XmlReader.
 Dispose(Boolean)	Освобождает неуправляемые ресурсы, используемые объектом XmlReader, а при необходимости освобождает также управляемые ресурсы.
 Equals(Object)	Определяет, равен ли заданный объект текущему объекту. (Унаследовано от Object.)
 Finalize	 Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как объект будет утилизирован в процессе сборки мусора. (Унаследовано от Object.)
 GetAttribute(Int32)	При переопределении в производном классе получает значение атрибута по указанному индексу.
 GetAttribute(String)	При переопределении в производном классе получает значение атрибута с указанным свойством Name.
 GetAttribute(String, String)	При переопределении в производном классе получает значение атрибута с указанными свойствами LocalName и NamespaceURI.
 GetHashCode	Служит хэш-функцией по умолчанию. (Унаследовано от Object.)
 GetType	Возвращает объект Type для текущего экземпляра. (Унаследовано от Object.)
 GetValueAsync	Асинхронно получает значение текущего узла.
 IsName	Возвращает значение, определяющее, является ли строковый аргумент допустимым именем XML.
 IsNameToken	Возвращает значение, определяющее, является ли строковый аргумент допустимым токеном имени XML.
 IsStartElement()	Вызывает метод MoveToContent и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента.
 IsStartElement(String)	Вызывает метод MoveToContent и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента, а также соответствует ли значение свойства Name элемента заданному аргументу.
 IsStartElement(String, String)	Вызывает метод MoveToContent и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента, а также соответствуют ли значения свойств LocalName и NamespaceURI элемента заданным строкам.
 LookupNamespace	При переопределении в производном классе разрешает префикс пространства имен в ограниченной области действия текущего элемента.
 MemberwiseClone	 Создает неполную копию текущего объекта Object. (Унаследовано от Object.)
 MoveToAttribute(Int32)	При переопределении в производном классе перемещает к атрибуту с указанным индексом.
 MoveToAttribute(String)	При переопределении в производном классе перемещает к атрибуту с указанным Name.
 MoveToAttribute(String, String)	При переопределении в производном классе перемещает к атрибуту с указанными LocalName и NamespaceURI.
 MoveToContent	Проверяет, является ли текущий узел узлом содержимого (текст без пустого пространства, CDATA, Element, EndElement, EntityReference или EndEntity). Если узел не является узлом содержимого, средство чтения пропускает этот узел и переходит в конец файла или к следующему узлу содержимого. Пропускаются узлы следующих типов: ProcessingInstruction, DocumentType, Comment, Whitespace и SignificantWhitespace.
 MoveToContentAsync	В асинхронном режиме проверяет, является ли текущий узел узлом содержимого. Если узел не является узлом содержимого, средство чтения пропускает этот узел и переходит в конец файла или к следующему узлу содержимого.
 MoveToElement	При переопределении в производном классе перемещает к элементу, содержащему текущий узел атрибута.
 MoveToFirstAttribute	При переопределении в производном классе перемещает к первому атрибуту.
 MoveToNextAttribute	При переопределении в производном классе перемещает к следующему атрибуту.
 Read	При переопределении в производном классе считывает из потока следующий узел.
 ReadAsync	Асинхронно считывает следующий узел из потока.
 ReadAttributeValue	При переопределении в производном классе разбирает значение атрибута в один или более узлов Text, EntityReference или EndEntity.
 ReadContentAs	Прочитывает содержимое объекта указанного типа.
 ReadContentAsAsync	Асинхронно считывает содержимое как объект указанного типа.
 ReadContentAsBase64	Считывает содержимое и возвращает раскодированные двоичные байты Base64.
 ReadContentAsBase64Async	Асинхронно считывает содержимое и возвращает раскодированные двоичные байты Base64.
 ReadContentAsBinHex	Считывает содержимое и возвращает раскодированные двоичные байты BinHex.
 ReadContentAsBinHexAsync	Асинхронно считывает содержимое и возвращает раскодированные двоичные байты BinHex.
 ReadContentAsBoolean	Считывает содержимое текста в текущей позиции как значение Boolean.
 ReadContentAsDateTime	Считывает содержимое текста в текущем положении как объект DateTime.
 ReadContentAsDateTimeOffset	Считывает содержимое текста в текущем положении как объект DateTimeOffset.
 ReadContentAsDecimal	Считывает содержимое текста в текущем положении как объект Decimal.
 ReadContentAsDouble	Считывает содержимое текста в текущей позиции как число с плавающей запятой двойной точности.
 ReadContentAsFloat	Считывает содержимое текста в текущей позиции как число с плавающей запятой одинарной точности.
 ReadContentAsInt	Считывает содержимое текста в текущем положении как 32-разрядное знаковое целое число.
 ReadContentAsLong	Считывает содержимое текста в текущей позиции как 64-разрядное знаковое целое число.
 ReadContentAsObject	Считывает содержимое текста в текущей позиции как значение Object.
 ReadContentAsObjectAsync	Асинхронно считывает содержимое текста в текущем положении как объект Object.
 ReadContentAsString	Считывает содержимое текста в текущем положении как объект String.
 ReadContentAsStringAsync	Асинхронно считывает содержимое текста в текущем положении как объект String.
 ReadElementContentAs(Type, IXmlNamespaceResolver)	Считывает содержимое элемента в качестве требуемого типа.
 ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)	Проверяет, сопоставлен ли URI локального имени и пространства имен с URI текущего элемента, затем считывает содержимое элемента требуемого типа.
 ReadElementContentAsAsync	Асинхронно считывает содержимое элемента как запрашиваемый тип.
 ReadElementContentAsBase64	Считывает элемент и раскодирует содержимое Base64.
 ReadElementContentAsBase64Async	Асинхронно считывает элемент и декодирует содержимое Base64.
 ReadElementContentAsBinHex	Считывает элемент и раскодирует содержимое BinHex.
 ReadElementContentAsBinHexAsync	Асинхронно считывает элемент и декодирует содержимое BinHex.
 ReadElementContentAsBoolean()	Считывает текущий элемент и возвращает содержимое объекта Boolean.
 ReadElementContentAsBoolean(String, String)	Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект Boolean.
 ReadElementContentAsDateTime()	Считывает текущий элемент и возвращает содержимое объекта DateTime.
 ReadElementContentAsDateTime(String, String)	Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект DateTime.
 ReadElementContentAsDecimal()	Считывает текущий элемент и возвращает содержимое объекта Decimal.
 ReadElementContentAsDecimal(String, String)	Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект Decimal.
 ReadElementContentAsDouble()	Считывает текущий элемент и возвращает содержимое как число с плавающей запятой двойной точности.
 ReadElementContentAsDouble(String, String)	Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как число с плавающей запятой двойной точности.
 ReadElementContentAsFloat()	Считывает текущий элемент и возвращает содержимое как число с плавающей запятой одинарной точности.
 ReadElementContentAsFloat(String, String)	Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как число с плавающей запятой одинарной точности.
 ReadElementContentAsInt()	Считывает текущий элемент и возвращает содержимое в виде 32-разрядного знакового целого числа.
 ReadElementContentAsInt(String, String)	Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как 32-разрядное целое число со знаком.
 ReadElementContentAsLong()	Считывает текущий элемент и возвращает содержимое как 64-разрядное знаковое целое число.
 ReadElementContentAsLong(String, String)	Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как 64-разрядное целое число со знаком.
 ReadElementContentAsObject()	Прочитывает текущий элемент и возвращает содержимое в качестве объекта Object.
 ReadElementContentAsObject(String, String)	Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект Object.
 ReadElementContentAsObjectAsync	Асинхронно считывает текущий элемент и возвращает содержимое как объект Object.
 ReadElementContentAsString()	Считывает текущий элемент и возвращает содержимое в качестве объекта String.
 ReadElementContentAsString(String, String)	Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект String.
 ReadElementContentAsStringAsync	Асинхронно считывает текущий элемент и возвращает содержимое как объект String.
 ReadElementString()	Считывает текстовый элемент.
 ReadElementString(String)	Проверяет перед чтением текстового элемента соответствие значения свойства Name найденного элемента и заданной строки.
 ReadElementString(String, String)	Проверяет перед чтением текстового элемента соответствие значений свойств LocalName и NamespaceURI найденного элемента и заданных строк.
 ReadEndElement	Проверяет, является ли текущий узел содержимого закрывающим тегом, и перемещает средство чтения на следующий узел.
 ReadInnerXml	При переопределении в производном классе считывает все содержимое, включая разметку, как строку.
 ReadInnerXmlAsync	Асинхронно считывает все содержимое, включая разметку, в виде строки.
 ReadOuterXml	При переопределении в производном классе считывает содержимое в виде строки, включая разметку, предоставляющую этот узел и все его дочерние узлы.
 ReadOuterXmlAsync	Асинхронно считывает содержимое в виде строки, включая разметку, предоставляющую этот узел и все его дочерние узлы.
 ReadStartElement()	Проверяет, является ли текущий узел элементом и перемещает средство чтения на следующий узел.
 ReadStartElement(String)	Проверяет, является ли текущий узел элементом с заданным Name, и перемещает средство чтения на следующий узел.
 ReadStartElement(String, String)	Проверяет, является ли текущий узел элементом с заданным LocalName и NamespaceURI, и перемещает средство чтения на следующий узел.
 ReadString	При переопределении в производном классе считывает содержимое узла элемента или текстового узла в виде строки.
 ReadSubtree	Возвращает новый экземпляр XmlReader, который может использоваться для считывания текущего узла и всех его потомков.
 ReadToDescendant(String)	Переводит XmlReader к следующему сопоставленному элементу-потомку с указанным проверенным именем.
 ReadToDescendant(String, String)	Переводит XmlReader к следующему элементу-потомку с указанным локальным именем и URI пространства имен.
 ReadToFollowing(String)	Производит чтение до обнаружения элемента с указанным проверенным именем.
 ReadToFollowing(String, String)	Производит чтение до обнаружения указанного URI локального имени и пространства имен.
 ReadToNextSibling(String)	Переводит XmlReader к следующему сопоставленному родственному элементу с указанным проверенным именем.
 ReadToNextSibling(String, String)	Переводит XmlReader к следующему родственному элементу с указанным локальным именем и URI пространства имен.
 ReadValueChunk	Считывает большие потоки текста, внедренного в XML-документ.
 ReadValueChunkAsync	Асинхронно считывает большие потоки текста, внедренного в XML-документ.
 ResolveEntity	При переопределении в производном классе разрешает ссылки для сущностей для узлов EntityReference.
 Skip	Пропускает дочерний узел текущего узла.
 SkipAsync	Асинхронно пропускает дочерний узел текущего узла.
 ToString	Возвращает строку, представляющую текущий объект. (Унаследовано от Object.)